#pragma once

/**
 * Returns the bit ID of a key
 */
/*qc2rust::define::ITEM_KEY_BIT*/
#define ITEM_KEY_BIT(n) /*qc2rust::macro_begin::ITEM_KEY_BIT*/( bitshift(1,  /*qc2rust::param_begin::n*/n /*qc2rust::param_end::n*/) ) /*qc2rust::macro_end::ITEM_KEY_BIT*/

/*qc2rust::define::ITEM_KEY_MAX*/
#define ITEM_KEY_MAX /*qc2rust::macro_begin::ITEM_KEY_MAX*/24 /*qc2rust::macro_end::ITEM_KEY_MAX*/

/**
 * list of key names.
 */
#ifdef SVQC
string item_keys_names[ITEM_KEY_MAX];

/**
 * Use keys from p on l.
 * Returns true if any new keys were given, false otherwise.
 */
float item_keys_usekey(entity l, entity p);

/**
 * Returns a string with a comma separated list of key names, as specified in keylist.
 */
string item_keys_keylist(float keylist);
#endif
