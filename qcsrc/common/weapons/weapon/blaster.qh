#pragma once

CLASS(Blaster, Weapon)
/* spawnfunc */ ATTRIB(Blaster, m_canonical_spawnfunc, string, "weapon_blaster");
/* ammotype  */ //ATTRIB(Blaster, ammo_type, int, RES_NONE);
/* impulse   */ ATTRIB(Blaster, impulse, int, 1);
/* flags     */ ATTRIB(Blaster, spawnflags, int, WEP_FLAG_NORMAL | WEP_FLAG_CANCLIMB | WEP_TYPE_SPLASH);
/* rating    */ ATTRIB(Blaster, bot_pickupbasevalue, float, 0);
/* color     */ ATTRIB(Blaster, wpcolor, vector, '1 0.5 0.5');
/* modelname */ ATTRIB(Blaster, mdl, string, "laser");
#ifdef GAMEQC
/* model     */ ATTRIB(Blaster, m_model, Model, MDL_BLASTER_ITEM);
#endif
/* crosshair */ ATTRIB(Blaster, w_crosshair, string, "gfx/crosshairlaser");
/* crosshair */ ATTRIB(Blaster, w_crosshair_size, float, 0.5);
/* wepimg    */ ATTRIB(Blaster, model2, string, "weaponlaser");
/* refname   */ ATTRIB(Blaster, netname, string, "blaster");
/* wepname   */ ATTRIB(Blaster, m_name, string, _("Blaster"));

/*qc2rust::define::X*/
#define X(BEGIN,P,END,class,prefix) /*qc2rust::macro_begin::X*/ /*qc2rust::param_begin::BEGIN*/BEGIN /*qc2rust::param_end::BEGIN*/( /*qc2rust::param_begin::class*/class /*qc2rust::param_end::class*/) 		 /*qc2rust::param_begin::P*/P /*qc2rust::param_end::P*/( /*qc2rust::param_begin::class*/class /*qc2rust::param_end::class*/,  /*qc2rust::param_begin::prefix*/prefix /*qc2rust::param_end::prefix*/, animtime, float, BOTH) 		 /*qc2rust::param_begin::P*/P /*qc2rust::param_end::P*/( /*qc2rust::param_begin::class*/class /*qc2rust::param_end::class*/,  /*qc2rust::param_begin::prefix*/prefix /*qc2rust::param_end::prefix*/, damage, float, BOTH) 		 /*qc2rust::param_begin::P*/P /*qc2rust::param_end::P*/( /*qc2rust::param_begin::class*/class /*qc2rust::param_end::class*/,  /*qc2rust::param_begin::prefix*/prefix /*qc2rust::param_end::prefix*/, delay, float, BOTH) 		 /*qc2rust::param_begin::P*/P /*qc2rust::param_end::P*/( /*qc2rust::param_begin::class*/class /*qc2rust::param_end::class*/,  /*qc2rust::param_begin::prefix*/prefix /*qc2rust::param_end::prefix*/, edgedamage, float, BOTH) 		 /*qc2rust::param_begin::P*/P /*qc2rust::param_end::P*/( /*qc2rust::param_begin::class*/class /*qc2rust::param_end::class*/,  /*qc2rust::param_begin::prefix*/prefix /*qc2rust::param_end::prefix*/, force, float, BOTH) 		 /*qc2rust::param_begin::P*/P /*qc2rust::param_end::P*/( /*qc2rust::param_begin::class*/class /*qc2rust::param_end::class*/,  /*qc2rust::param_begin::prefix*/prefix /*qc2rust::param_end::prefix*/, force_zscale, float, BOTH) 		 /*qc2rust::param_begin::P*/P /*qc2rust::param_end::P*/( /*qc2rust::param_begin::class*/class /*qc2rust::param_end::class*/,  /*qc2rust::param_begin::prefix*/prefix /*qc2rust::param_end::prefix*/, lifetime, float, BOTH) 		 /*qc2rust::param_begin::P*/P /*qc2rust::param_end::P*/( /*qc2rust::param_begin::class*/class /*qc2rust::param_end::class*/,  /*qc2rust::param_begin::prefix*/prefix /*qc2rust::param_end::prefix*/, radius, float, BOTH) 		 /*qc2rust::param_begin::P*/P /*qc2rust::param_end::P*/( /*qc2rust::param_begin::class*/class /*qc2rust::param_end::class*/,  /*qc2rust::param_begin::prefix*/prefix /*qc2rust::param_end::prefix*/, refire, float, BOTH) 		 /*qc2rust::param_begin::P*/P /*qc2rust::param_end::P*/( /*qc2rust::param_begin::class*/class /*qc2rust::param_end::class*/,  /*qc2rust::param_begin::prefix*/prefix /*qc2rust::param_end::prefix*/, secondary, float, NONE) 		 /*qc2rust::param_begin::P*/P /*qc2rust::param_end::P*/( /*qc2rust::param_begin::class*/class /*qc2rust::param_end::class*/,  /*qc2rust::param_begin::prefix*/prefix /*qc2rust::param_end::prefix*/, shotangle, float, BOTH) 		 /*qc2rust::param_begin::P*/P /*qc2rust::param_end::P*/( /*qc2rust::param_begin::class*/class /*qc2rust::param_end::class*/,  /*qc2rust::param_begin::prefix*/prefix /*qc2rust::param_end::prefix*/, speed, float, BOTH) 		 /*qc2rust::param_begin::P*/P /*qc2rust::param_end::P*/( /*qc2rust::param_begin::class*/class /*qc2rust::param_end::class*/,  /*qc2rust::param_begin::prefix*/prefix /*qc2rust::param_end::prefix*/, spread, float, BOTH)          /*qc2rust::param_begin::P*/P /*qc2rust::param_end::P*/( /*qc2rust::param_begin::class*/class /*qc2rust::param_end::class*/,  /*qc2rust::param_begin::prefix*/prefix /*qc2rust::param_end::prefix*/, switchdelay_drop, float, NONE) 		 /*qc2rust::param_begin::P*/P /*qc2rust::param_end::P*/( /*qc2rust::param_begin::class*/class /*qc2rust::param_end::class*/,  /*qc2rust::param_begin::prefix*/prefix /*qc2rust::param_end::prefix*/, switchdelay_raise, float, NONE)          /*qc2rust::param_begin::P*/P /*qc2rust::param_end::P*/( /*qc2rust::param_begin::class*/class /*qc2rust::param_end::class*/,  /*qc2rust::param_begin::prefix*/prefix /*qc2rust::param_end::prefix*/, weaponreplace, string, NONE)          /*qc2rust::param_begin::P*/P /*qc2rust::param_end::P*/( /*qc2rust::param_begin::class*/class /*qc2rust::param_end::class*/,  /*qc2rust::param_begin::prefix*/prefix /*qc2rust::param_end::prefix*/, weaponstartoverride, float, NONE)          /*qc2rust::param_begin::P*/P /*qc2rust::param_end::P*/( /*qc2rust::param_begin::class*/class /*qc2rust::param_end::class*/,  /*qc2rust::param_begin::prefix*/prefix /*qc2rust::param_end::prefix*/, weaponstart, float, NONE)          /*qc2rust::param_begin::P*/P /*qc2rust::param_end::P*/( /*qc2rust::param_begin::class*/class /*qc2rust::param_end::class*/,  /*qc2rust::param_begin::prefix*/prefix /*qc2rust::param_end::prefix*/, weaponthrowable, float, NONE) 	 /*qc2rust::param_begin::END*/END /*qc2rust::param_end::END*/() /*qc2rust::macro_end::X*/
	W_PROPS(X, Blaster, blaster)
#undef X

ENDCLASS(Blaster)
REGISTER_WEAPON(BLASTER, blaster, NEW(Blaster));

SPAWNFUNC_WEAPON(weapon_blaster, WEP_BLASTER)
SPAWNFUNC_WEAPON(weapon_laser, WEP_BLASTER)

CLASS(OffhandBlaster, OffhandWeapon)
ENDCLASS(OffhandBlaster)
OffhandBlaster OFFHAND_BLASTER; STATIC_INIT(OFFHAND_BLASTER) { OFFHAND_BLASTER = NEW(OffhandBlaster); }

#ifdef SVQC
.float blaster_damage;
.float blaster_edgedamage;
.float blaster_radius;
.float blaster_force;
.float blaster_lifetime;

// Will be demacroed after WEP_CVAR macros are also demacroed.
/*qc2rust::define::BLASTER_SECONDARY_ATTACK*/
#define BLASTER_SECONDARY_ATTACK(weapon_name,actor,weaponentity) /*qc2rust::macro_begin::BLASTER_SECONDARY_ATTACK*/makevectors( /*qc2rust::param_begin::actor*/actor /*qc2rust::param_end::actor*/.v_angle); 	W_Blaster_Attack( 		 /*qc2rust::param_begin::actor*/actor /*qc2rust::param_end::actor*/, 		 /*qc2rust::param_begin::weaponentity*/weaponentity /*qc2rust::param_end::weaponentity*/, 		WEP_BLASTER.m_id | HITTYPE_SECONDARY, 		WEP_CVAR_SEC( /*qc2rust::param_begin::weapon_name*/weapon_name /*qc2rust::param_end::weapon_name*/, shotangle), 		WEP_CVAR_SEC( /*qc2rust::param_begin::weapon_name*/weapon_name /*qc2rust::param_end::weapon_name*/, damage), 		WEP_CVAR_SEC( /*qc2rust::param_begin::weapon_name*/weapon_name /*qc2rust::param_end::weapon_name*/, edgedamage), 		WEP_CVAR_SEC( /*qc2rust::param_begin::weapon_name*/weapon_name /*qc2rust::param_end::weapon_name*/, radius), 		WEP_CVAR_SEC( /*qc2rust::param_begin::weapon_name*/weapon_name /*qc2rust::param_end::weapon_name*/, force), 		WEP_CVAR_SEC( /*qc2rust::param_begin::weapon_name*/weapon_name /*qc2rust::param_end::weapon_name*/, speed), 		WEP_CVAR_SEC( /*qc2rust::param_begin::weapon_name*/weapon_name /*qc2rust::param_end::weapon_name*/, spread), 		WEP_CVAR_SEC( /*qc2rust::param_begin::weapon_name*/weapon_name /*qc2rust::param_end::weapon_name*/, delay), 		WEP_CVAR_SEC( /*qc2rust::param_begin::weapon_name*/weapon_name /*qc2rust::param_end::weapon_name*/, lifetime) 	); /*qc2rust::macro_end::BLASTER_SECONDARY_ATTACK*/

#endif
