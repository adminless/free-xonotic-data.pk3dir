#pragma once

CLASS(Rifle, Weapon)
/* spawnfunc */ ATTRIB(Rifle, m_canonical_spawnfunc, string, "weapon_rifle");
/* ammotype  */ ATTRIB(Rifle, ammo_type, int, RES_BULLETS);
/* impulse   */ ATTRIB(Rifle, impulse, int, 7);
/* flags     */ ATTRIB(Rifle, spawnflags, int, WEP_FLAG_MUTATORBLOCKED | WEP_FLAG_RELOADABLE | WEP_TYPE_HITSCAN | WEP_FLAG_PENETRATEWALLS);
/* rating    */ ATTRIB(Rifle, bot_pickupbasevalue, float, 7000);
/* color     */ ATTRIB(Rifle, wpcolor, vector, '0.5 1 0');
/* modelname */ ATTRIB(Rifle, mdl, string, "campingrifle");
#ifdef GAMEQC
/* model     */ ATTRIB(Rifle, m_model, Model, MDL_RIFLE_ITEM);
#endif
/* crosshair */ ATTRIB(Rifle, w_crosshair, string, "gfx/crosshairrifle");
/* crosshair */ ATTRIB(Rifle, w_crosshair_size, float, 0.6);
/* reticle   */ ATTRIB(Rifle, w_reticle, string, "gfx/reticle_nex");
/* wepimg    */ ATTRIB(Rifle, model2, string, "weaponrifle");
/* refname   */ ATTRIB(Rifle, netname, string, "rifle");
/* wepname   */ ATTRIB(Rifle, m_name, string, _("Rifle"));

/*qc2rust::define::X*/
#define X(BEGIN,P,END,class,prefix) /*qc2rust::macro_begin::X*/ /*qc2rust::param_begin::BEGIN*/BEGIN /*qc2rust::param_end::BEGIN*/( /*qc2rust::param_begin::class*/class /*qc2rust::param_end::class*/) 		 /*qc2rust::param_begin::P*/P /*qc2rust::param_end::P*/( /*qc2rust::param_begin::class*/class /*qc2rust::param_end::class*/,  /*qc2rust::param_begin::prefix*/prefix /*qc2rust::param_end::prefix*/, ammo, float, BOTH) 		 /*qc2rust::param_begin::P*/P /*qc2rust::param_end::P*/( /*qc2rust::param_begin::class*/class /*qc2rust::param_end::class*/,  /*qc2rust::param_begin::prefix*/prefix /*qc2rust::param_end::prefix*/, animtime, float, BOTH) 		 /*qc2rust::param_begin::P*/P /*qc2rust::param_end::P*/( /*qc2rust::param_begin::class*/class /*qc2rust::param_end::class*/,  /*qc2rust::param_begin::prefix*/prefix /*qc2rust::param_end::prefix*/, bullethail, float, BOTH) 		 /*qc2rust::param_begin::P*/P /*qc2rust::param_end::P*/( /*qc2rust::param_begin::class*/class /*qc2rust::param_end::class*/,  /*qc2rust::param_begin::prefix*/prefix /*qc2rust::param_end::prefix*/, burstcost, float, BOTH) 		 /*qc2rust::param_begin::P*/P /*qc2rust::param_end::P*/( /*qc2rust::param_begin::class*/class /*qc2rust::param_end::class*/,  /*qc2rust::param_begin::prefix*/prefix /*qc2rust::param_end::prefix*/, bursttime, float, NONE) 		 /*qc2rust::param_begin::P*/P /*qc2rust::param_end::P*/( /*qc2rust::param_begin::class*/class /*qc2rust::param_end::class*/,  /*qc2rust::param_begin::prefix*/prefix /*qc2rust::param_end::prefix*/, damage, float, BOTH) 		 /*qc2rust::param_begin::P*/P /*qc2rust::param_end::P*/( /*qc2rust::param_begin::class*/class /*qc2rust::param_end::class*/,  /*qc2rust::param_begin::prefix*/prefix /*qc2rust::param_end::prefix*/, force, float, BOTH) 		 /*qc2rust::param_begin::P*/P /*qc2rust::param_end::P*/( /*qc2rust::param_begin::class*/class /*qc2rust::param_end::class*/,  /*qc2rust::param_begin::prefix*/prefix /*qc2rust::param_end::prefix*/, refire, float, BOTH) 		 /*qc2rust::param_begin::P*/P /*qc2rust::param_end::P*/( /*qc2rust::param_begin::class*/class /*qc2rust::param_end::class*/,  /*qc2rust::param_begin::prefix*/prefix /*qc2rust::param_end::prefix*/, reload, float, SEC) 		 /*qc2rust::param_begin::P*/P /*qc2rust::param_end::P*/( /*qc2rust::param_begin::class*/class /*qc2rust::param_end::class*/,  /*qc2rust::param_begin::prefix*/prefix /*qc2rust::param_end::prefix*/, reload_ammo, float, NONE)     	 /*qc2rust::param_begin::P*/P /*qc2rust::param_end::P*/( /*qc2rust::param_begin::class*/class /*qc2rust::param_end::class*/,  /*qc2rust::param_begin::prefix*/prefix /*qc2rust::param_end::prefix*/, reload_time, float, NONE) 		 /*qc2rust::param_begin::P*/P /*qc2rust::param_end::P*/( /*qc2rust::param_begin::class*/class /*qc2rust::param_end::class*/,  /*qc2rust::param_begin::prefix*/prefix /*qc2rust::param_end::prefix*/, secondary, float, NONE) 		 /*qc2rust::param_begin::P*/P /*qc2rust::param_end::P*/( /*qc2rust::param_begin::class*/class /*qc2rust::param_end::class*/,  /*qc2rust::param_begin::prefix*/prefix /*qc2rust::param_end::prefix*/, shots, float, BOTH) 		 /*qc2rust::param_begin::P*/P /*qc2rust::param_end::P*/( /*qc2rust::param_begin::class*/class /*qc2rust::param_end::class*/,  /*qc2rust::param_begin::prefix*/prefix /*qc2rust::param_end::prefix*/, solidpenetration, float, BOTH) 		 /*qc2rust::param_begin::P*/P /*qc2rust::param_end::P*/( /*qc2rust::param_begin::class*/class /*qc2rust::param_end::class*/,  /*qc2rust::param_begin::prefix*/prefix /*qc2rust::param_end::prefix*/, spread, float, BOTH)     	 /*qc2rust::param_begin::P*/P /*qc2rust::param_end::P*/( /*qc2rust::param_begin::class*/class /*qc2rust::param_end::class*/,  /*qc2rust::param_begin::prefix*/prefix /*qc2rust::param_end::prefix*/, switchdelay_drop, float, NONE)     	 /*qc2rust::param_begin::P*/P /*qc2rust::param_end::P*/( /*qc2rust::param_begin::class*/class /*qc2rust::param_end::class*/,  /*qc2rust::param_begin::prefix*/prefix /*qc2rust::param_end::prefix*/, switchdelay_raise, float, NONE) 		 /*qc2rust::param_begin::P*/P /*qc2rust::param_end::P*/( /*qc2rust::param_begin::class*/class /*qc2rust::param_end::class*/,  /*qc2rust::param_begin::prefix*/prefix /*qc2rust::param_end::prefix*/, tracer, float, BOTH)     	 /*qc2rust::param_begin::P*/P /*qc2rust::param_end::P*/( /*qc2rust::param_begin::class*/class /*qc2rust::param_end::class*/,  /*qc2rust::param_begin::prefix*/prefix /*qc2rust::param_end::prefix*/, weaponreplace, string, NONE)     	 /*qc2rust::param_begin::P*/P /*qc2rust::param_end::P*/( /*qc2rust::param_begin::class*/class /*qc2rust::param_end::class*/,  /*qc2rust::param_begin::prefix*/prefix /*qc2rust::param_end::prefix*/, weaponstartoverride, float, NONE)     	 /*qc2rust::param_begin::P*/P /*qc2rust::param_end::P*/( /*qc2rust::param_begin::class*/class /*qc2rust::param_end::class*/,  /*qc2rust::param_begin::prefix*/prefix /*qc2rust::param_end::prefix*/, weaponstart, float, NONE)     	 /*qc2rust::param_begin::P*/P /*qc2rust::param_end::P*/( /*qc2rust::param_begin::class*/class /*qc2rust::param_end::class*/,  /*qc2rust::param_begin::prefix*/prefix /*qc2rust::param_end::prefix*/, weaponthrowable, float, NONE) 	 /*qc2rust::param_begin::END*/END /*qc2rust::param_end::END*/() /*qc2rust::macro_end::X*/
    W_PROPS(X, Rifle, rifle)
#undef X
ENDCLASS(Rifle)
REGISTER_WEAPON(RIFLE, rifle, NEW(Rifle));

SPAWNFUNC_WEAPON(weapon_rifle, WEP_RIFLE)
SPAWNFUNC_WEAPON(weapon_campingrifle, WEP_RIFLE)
SPAWNFUNC_WEAPON(weapon_sniperrifle, WEP_RIFLE)

#ifdef SVQC
.float rifle_accumulator;
#endif
