#pragma once

#if 1
/*qc2rust::define::ITER_CONST*/
#define ITER_CONST /*qc2rust::macro_begin::ITER_CONST*/const /*qc2rust::macro_end::ITER_CONST*/
#else
/*qc2rust::define::ITER_CONST*/
#define ITER_CONST /*qc2rust::macro_begin::ITER_CONST*/ /*qc2rust::macro_end::ITER_CONST*/
#endif

/*qc2rust::define::FOREACH_ARRAY*/
#define FOREACH_ARRAY(arr,start,end,cond,body) /*qc2rust::macro_begin::FOREACH_ARRAY*/MACRO_BEGIN 		for (int _i =  /*qc2rust::param_begin::start*/start /*qc2rust::param_end::start*/; _i <  /*qc2rust::param_begin::end*/end /*qc2rust::param_end::end*/; ++_i) 		{ 			const noref int i = _i; 			ITER_CONST noref entity it =  /*qc2rust::param_begin::arr*/arr /*qc2rust::param_end::arr*/[i]; 			if ( /*qc2rust::param_begin::cond*/cond /*qc2rust::param_end::cond*/) { LAMBDA( /*qc2rust::param_begin::body*/body /*qc2rust::param_end::body*/) } 		} 	MACRO_END /*qc2rust::macro_end::FOREACH_ARRAY*/

/*qc2rust::define::FOREACH*/
#define FOREACH(list,cond,body) /*qc2rust::macro_begin::FOREACH*/FOREACH_LIST( /*qc2rust::param_begin::list*/list /*qc2rust::param_end::list*/, enemy,  /*qc2rust::param_begin::cond*/cond /*qc2rust::param_end::cond*/,  /*qc2rust::param_begin::body*/body /*qc2rust::param_end::body*/) /*qc2rust::macro_end::FOREACH*/

#define FOREACH_LIST(list, next, cond, body) 	MACRO_BEGIN 		int _i = 0; 		for (entity _it = list##_first, _next = NULL; _it; (_it = _next, ++_i)) 		{ 			const noref int i = _i; 			ITER_CONST noref entity it = _it; 			_next = _it.next; 			if (cond) { LAMBDA(body) } 		} 	MACRO_END

/*qc2rust::define::FOREACH_WORD*/
#define FOREACH_WORD(words,cond,body) /*qc2rust::macro_begin::FOREACH_WORD*/MACRO_BEGIN 		string _words =  /*qc2rust::param_begin::words*/words /*qc2rust::param_end::words*/; 		int _i = 0; 		for (string _it; (_it = car(_words)); (_words = cdr(_words), ++_i)) 		{ 			const noref int i = _i; 			const noref string it = _it; 			if ( /*qc2rust::param_begin::cond*/cond /*qc2rust::param_end::cond*/) { LAMBDA( /*qc2rust::param_begin::body*/body /*qc2rust::param_end::body*/) } 		} 	MACRO_END /*qc2rust::macro_end::FOREACH_WORD*/

#define STRING_ITERATOR(this, s, i) 	string this##_s = s; 	int this##_i = i

#define STRING_ITERATOR_SET(this, s, i) 	MACRO_BEGIN 		this##_s = s; 		this##_i = i; 	MACRO_END

#define STRING_ITERATOR_GET(this) str2chr(this##_s, this##_i++)
#define STRING_ITERATOR_PEEK(this) str2chr(this##_s, this##_i)
#define STRING_ITERATOR_NEXT(this) MACRO_BEGIN ++this##_i; MACRO_END
#define STRING_ITERATOR_UNGET(this) MACRO_BEGIN --this##_i; MACRO_END
#define STRING_ITERATOR_SAVE(this) this##_i
#define STRING_ITERATOR_LOAD(this, n) MACRO_BEGIN this##_i = n; MACRO_END

/*qc2rust::define::FOREACH_CHAR*/
#define FOREACH_CHAR(s,cond,body) /*qc2rust::macro_begin::FOREACH_CHAR*/MACRO_BEGIN 		STRING_ITERATOR(iter,  /*qc2rust::param_begin::s*/s /*qc2rust::param_end::s*/, 0); 		int _it; 		while ((_it = STRING_ITERATOR_GET(iter)) > 0) 		{ 			const noref int it = _it; 			if ( /*qc2rust::param_begin::cond*/cond /*qc2rust::param_end::cond*/) { LAMBDA( /*qc2rust::param_begin::body*/body /*qc2rust::param_end::body*/) } 		} 	MACRO_END /*qc2rust::macro_end::FOREACH_CHAR*/

#if defined(CSQC)
    entity(entity start, .string fld, string match) _findstring = #18;
	entity(.string fld, string match, .entity tofield) _findchainstring_tofield = #402;

    entity(entity start, .entity fld, entity match) _findentity = #98;
	entity(.entity fld, entity match, .entity tofield) _findchainentity_tofield = #403;

    entity(entity start, .float fld, float match) _findfloat = #98;
	entity(.float fld, float match, .entity tofield) _findchainfloat_tofield = #403;

	entity(entity start, .float fld, float match) _findflags = #449;
	entity(.float fld, float match, .entity tofield) _findchainflags_tofield = #450;
#elif defined(SVQC)
    entity(entity start, .string fld, string match) _findstring = #18;
	entity(.string fld, string match, .entity tofield) _findchainstring_tofield = #402;

    entity(entity start, .entity fld, entity match) _findentity = #98;
	entity(.entity fld, entity match, .entity tofield) _findchainentity_tofield = #403;

    entity(entity start, .float fld, float match) _findfloat = #98;
	entity(.float fld, float match, .entity tofield) _findchainfloat_tofield = #403;

	entity(entity start, .float fld, float match) _findflags = #449;
	entity(.float fld, float match, .entity tofield) _findchainflags_tofield = #450;
#elif defined(MENUQC)
    entity(entity start, .string fld, string match) _findstring = #24;
	entity(.string fld, string match, .entity tofield) _findchainstring_tofield = #26;

    entity(entity start, .entity fld, entity match) _findentity = #25;
	entity(.entity fld, entity match, .entity tofield) _findchainentity_tofield = #27;

    entity(entity start, .float fld, float match) _findfloat = #25;
	entity(.float fld, float match, .entity tofield) _findchainfloat_tofield = #27;

	entity(entity start, .float fld, float match) _findflags = #87;
	entity(.float fld, float match, .entity tofield) _findchainflags_tofield = #88;
#endif

#define ORDERED(F) F##_UNORDERED
#define _FOREACH_ENTITY_FIND_ORDERED(T, fld, match, cond, body)     MACRO_BEGIN         int _i = 0;         for (entity _it = NULL; (_it = _find##T(_it, fld, match)); ++_i)         {             const noref int i = _i;             ITER_CONST noref entity it = _it;             if (cond) LAMBDA(body)         }     MACRO_END
/*qc2rust::define::MUTEX_LOCK*/
#define MUTEX_LOCK(this) /*qc2rust::macro_begin::MUTEX_LOCK*/MACRO_BEGIN 	if ( /*qc2rust::param_begin::this*/this /*qc2rust::param_end::this*/) LOG_SEVEREF("Loop mutex held by %s",  /*qc2rust::param_begin::this*/this /*qc2rust::param_end::this*/); 	 /*qc2rust::param_begin::this*/this /*qc2rust::param_end::this*/ = __FUNC__; MACRO_END /*qc2rust::macro_end::MUTEX_LOCK*/
/*qc2rust::define::MUTEX_UNLOCK*/
#define MUTEX_UNLOCK(this) /*qc2rust::macro_begin::MUTEX_UNLOCK*/MACRO_BEGIN 	 /*qc2rust::param_begin::this*/this /*qc2rust::param_end::this*/ = string_null; MACRO_END /*qc2rust::macro_end::MUTEX_UNLOCK*/
#define _FOREACH_ENTITY_FIND_UNORDERED(id, T, fld, match, cond, body) 	MACRO_BEGIN 		MUTEX_LOCK(_FOREACH_ENTITY_FIND_##T##_##id##mutex); 		entity _foundchain_first = _findchain##T##_tofield(fld, match, _FOREACH_ENTITY_FIND_##T##_next##id); 		FOREACH_LIST(_foundchain, _FOREACH_ENTITY_FIND_##T##_next##id, cond, body); 		MUTEX_UNLOCK(_FOREACH_ENTITY_FIND_##T##_##id##mutex); 	MACRO_END

/*qc2rust::define::FOREACH_ENTITY*/
#define FOREACH_ENTITY(cond,body) /*qc2rust::macro_begin::FOREACH_ENTITY*/ORDERED(FOREACH_ENTITY)( /*qc2rust::param_begin::cond*/cond /*qc2rust::param_end::cond*/,  /*qc2rust::param_begin::body*/body /*qc2rust::param_end::body*/) /*qc2rust::macro_end::FOREACH_ENTITY*/
/*qc2rust::define::FOREACH_ENTITY_ORDERED*/
#define FOREACH_ENTITY_ORDERED(cond,body) /*qc2rust::macro_begin::FOREACH_ENTITY_ORDERED*/MACRO_BEGIN 		int _i = 0; 		for (entity _it = NULL; (_it = nextent(_it)); ++_i) 		{ 			const noref int i = _i; 			ITER_CONST noref entity it = _it; 			if ( /*qc2rust::param_begin::cond*/cond /*qc2rust::param_end::cond*/) LAMBDA( /*qc2rust::param_begin::body*/body /*qc2rust::param_end::body*/) 		} 	MACRO_END /*qc2rust::macro_end::FOREACH_ENTITY_ORDERED*/
/** marker field, always NULL */
.entity _FOREACH_ENTITY_fld;
.entity _FOREACH_ENTITY_FIND_entity_nextall; noref string _FOREACH_ENTITY_FIND_entity_allmutex;
/*qc2rust::define::FOREACH_ENTITY_UNORDERED*/
#define FOREACH_ENTITY_UNORDERED(cond,body) /*qc2rust::macro_begin::FOREACH_ENTITY_UNORDERED*/_FOREACH_ENTITY_FIND_UNORDERED(all, entity, _FOREACH_ENTITY_fld, NULL,  /*qc2rust::param_begin::cond*/cond /*qc2rust::param_end::cond*/,  /*qc2rust::param_begin::body*/body /*qc2rust::param_end::body*/) /*qc2rust::macro_end::FOREACH_ENTITY_UNORDERED*/

/*qc2rust::define::FOREACH_ENTITY_FLAGS*/
#define FOREACH_ENTITY_FLAGS(fld,match,body) /*qc2rust::macro_begin::FOREACH_ENTITY_FLAGS*/ORDERED(FOREACH_ENTITY_FLAGS)( /*qc2rust::param_begin::fld*/fld /*qc2rust::param_end::fld*/,  /*qc2rust::param_begin::match*/match /*qc2rust::param_end::match*/,  /*qc2rust::param_begin::body*/body /*qc2rust::param_end::body*/) /*qc2rust::macro_end::FOREACH_ENTITY_FLAGS*/
/*qc2rust::define::FOREACH_ENTITY_FLAGS_ORDERED*/
#define FOREACH_ENTITY_FLAGS_ORDERED(fld,match,body) /*qc2rust::macro_begin::FOREACH_ENTITY_FLAGS_ORDERED*/_FOREACH_ENTITY_FIND_ORDERED(flags,  /*qc2rust::param_begin::fld*/fld /*qc2rust::param_end::fld*/,  /*qc2rust::param_begin::match*/match /*qc2rust::param_end::match*/, true,  /*qc2rust::param_begin::body*/body /*qc2rust::param_end::body*/) /*qc2rust::macro_end::FOREACH_ENTITY_FLAGS_ORDERED*/
.entity _FOREACH_ENTITY_FIND_flags_next; noref string _FOREACH_ENTITY_FIND_flags_mutex;
/*qc2rust::define::FOREACH_ENTITY_FLAGS_UNORDERED*/
#define FOREACH_ENTITY_FLAGS_UNORDERED(fld,match,body) /*qc2rust::macro_begin::FOREACH_ENTITY_FLAGS_UNORDERED*/_FOREACH_ENTITY_FIND_UNORDERED(, flags,  /*qc2rust::param_begin::fld*/fld /*qc2rust::param_end::fld*/,  /*qc2rust::param_begin::match*/match /*qc2rust::param_end::match*/, true,  /*qc2rust::param_begin::body*/body /*qc2rust::param_end::body*/) /*qc2rust::macro_end::FOREACH_ENTITY_FLAGS_UNORDERED*/

#ifdef GAMEQC
entity(vector org, float rad, .entity tofield) _findchainradius_tofield = #22;
/*qc2rust::define::FOREACH_ENTITY_RADIUS*/
#define FOREACH_ENTITY_RADIUS(org,dist,cond,body) /*qc2rust::macro_begin::FOREACH_ENTITY_RADIUS*/ORDERED(FOREACH_ENTITY_RADIUS)( /*qc2rust::param_begin::org*/org /*qc2rust::param_end::org*/,  /*qc2rust::param_begin::dist*/dist /*qc2rust::param_end::dist*/,  /*qc2rust::param_begin::cond*/cond /*qc2rust::param_end::cond*/,  /*qc2rust::param_begin::body*/body /*qc2rust::param_end::body*/) /*qc2rust::macro_end::FOREACH_ENTITY_RADIUS*/
.entity _FOREACH_ENTITY_FIND_radius_next; noref string _FOREACH_ENTITY_FIND_radius_mutex;
/*qc2rust::define::FOREACH_ENTITY_RADIUS_UNORDERED*/
#define FOREACH_ENTITY_RADIUS_UNORDERED(org,dist,cond,body) /*qc2rust::macro_begin::FOREACH_ENTITY_RADIUS_UNORDERED*/_FOREACH_ENTITY_FIND_UNORDERED(, radius,  /*qc2rust::param_begin::org*/org /*qc2rust::param_end::org*/,  /*qc2rust::param_begin::dist*/dist /*qc2rust::param_end::dist*/,  /*qc2rust::param_begin::cond*/cond /*qc2rust::param_end::cond*/,  /*qc2rust::param_begin::body*/body /*qc2rust::param_end::body*/) /*qc2rust::macro_end::FOREACH_ENTITY_RADIUS_UNORDERED*/
.entity _FOREACH_ENTITY_FIND_radius_nexttmp; noref string _FOREACH_ENTITY_FIND_radius_tmpmutex;
/*qc2rust::define::FOREACH_ENTITY_RADIUS_ORDERED*/
#define FOREACH_ENTITY_RADIUS_ORDERED(org,dist,cond,body) /*qc2rust::macro_begin::FOREACH_ENTITY_RADIUS_ORDERED*/MACRO_BEGIN 	entity _rev_first = NULL; 	_FOREACH_ENTITY_FIND_UNORDERED(tmp, radius,  /*qc2rust::param_begin::org*/org /*qc2rust::param_end::org*/,  /*qc2rust::param_begin::dist*/dist /*qc2rust::param_end::dist*/,  /*qc2rust::param_begin::cond*/cond /*qc2rust::param_end::cond*/, (it._FOREACH_ENTITY_FIND_radius_nexttmp = _rev_first, _rev_first = it)); 	MUTEX_LOCK(_FOREACH_ENTITY_FIND_radius_tmpmutex); 	FOREACH_LIST(_rev, _FOREACH_ENTITY_FIND_radius_nexttmp, true,  /*qc2rust::param_begin::body*/body /*qc2rust::param_end::body*/); 	MUTEX_UNLOCK(_FOREACH_ENTITY_FIND_radius_tmpmutex); MACRO_END /*qc2rust::macro_end::FOREACH_ENTITY_RADIUS_ORDERED*/
#endif

/*qc2rust::define::FOREACH_ENTITY_FLOAT*/
#define FOREACH_ENTITY_FLOAT(fld,match,body) /*qc2rust::macro_begin::FOREACH_ENTITY_FLOAT*/ORDERED(FOREACH_ENTITY_FLOAT)( /*qc2rust::param_begin::fld*/fld /*qc2rust::param_end::fld*/,  /*qc2rust::param_begin::match*/match /*qc2rust::param_end::match*/,  /*qc2rust::param_begin::body*/body /*qc2rust::param_end::body*/) /*qc2rust::macro_end::FOREACH_ENTITY_FLOAT*/
/*qc2rust::define::FOREACH_ENTITY_FLOAT_ORDERED*/
#define FOREACH_ENTITY_FLOAT_ORDERED(fld,match,body) /*qc2rust::macro_begin::FOREACH_ENTITY_FLOAT_ORDERED*/_FOREACH_ENTITY_FIND_ORDERED(float,  /*qc2rust::param_begin::fld*/fld /*qc2rust::param_end::fld*/,  /*qc2rust::param_begin::match*/match /*qc2rust::param_end::match*/, true,  /*qc2rust::param_begin::body*/body /*qc2rust::param_end::body*/) /*qc2rust::macro_end::FOREACH_ENTITY_FLOAT_ORDERED*/
.entity _FOREACH_ENTITY_FIND_float_next; noref string _FOREACH_ENTITY_FIND_float_mutex;
/*qc2rust::define::FOREACH_ENTITY_FLOAT_UNORDERED*/
#define FOREACH_ENTITY_FLOAT_UNORDERED(fld,match,body) /*qc2rust::macro_begin::FOREACH_ENTITY_FLOAT_UNORDERED*/_FOREACH_ENTITY_FIND_UNORDERED(, float,  /*qc2rust::param_begin::fld*/fld /*qc2rust::param_end::fld*/,  /*qc2rust::param_begin::match*/match /*qc2rust::param_end::match*/, true,  /*qc2rust::param_begin::body*/body /*qc2rust::param_end::body*/) /*qc2rust::macro_end::FOREACH_ENTITY_FLOAT_UNORDERED*/

/*qc2rust::define::FOREACH_ENTITY_ENT*/
#define FOREACH_ENTITY_ENT(fld,match,body) /*qc2rust::macro_begin::FOREACH_ENTITY_ENT*/ORDERED(FOREACH_ENTITY_ENT)( /*qc2rust::param_begin::fld*/fld /*qc2rust::param_end::fld*/,  /*qc2rust::param_begin::match*/match /*qc2rust::param_end::match*/,  /*qc2rust::param_begin::body*/body /*qc2rust::param_end::body*/) /*qc2rust::macro_end::FOREACH_ENTITY_ENT*/
/*qc2rust::define::FOREACH_ENTITY_ENT_ORDERED*/
#define FOREACH_ENTITY_ENT_ORDERED(fld,match,body) /*qc2rust::macro_begin::FOREACH_ENTITY_ENT_ORDERED*/_FOREACH_ENTITY_FIND_ORDERED(entity,  /*qc2rust::param_begin::fld*/fld /*qc2rust::param_end::fld*/,  /*qc2rust::param_begin::match*/match /*qc2rust::param_end::match*/, true,  /*qc2rust::param_begin::body*/body /*qc2rust::param_end::body*/) /*qc2rust::macro_end::FOREACH_ENTITY_ENT_ORDERED*/
.entity _FOREACH_ENTITY_FIND_entity_next; noref string _FOREACH_ENTITY_FIND_entity_mutex;
/*qc2rust::define::FOREACH_ENTITY_ENT_UNORDERED*/
#define FOREACH_ENTITY_ENT_UNORDERED(fld,match,body) /*qc2rust::macro_begin::FOREACH_ENTITY_ENT_UNORDERED*/_FOREACH_ENTITY_FIND_UNORDERED(, entity,  /*qc2rust::param_begin::fld*/fld /*qc2rust::param_end::fld*/,  /*qc2rust::param_begin::match*/match /*qc2rust::param_end::match*/, true,  /*qc2rust::param_begin::body*/body /*qc2rust::param_end::body*/) /*qc2rust::macro_end::FOREACH_ENTITY_ENT_UNORDERED*/

/*qc2rust::define::FOREACH_ENTITY_STRING*/
#define FOREACH_ENTITY_STRING(fld,match,body) /*qc2rust::macro_begin::FOREACH_ENTITY_STRING*/ORDERED(FOREACH_ENTITY_STRING)( /*qc2rust::param_begin::fld*/fld /*qc2rust::param_end::fld*/,  /*qc2rust::param_begin::match*/match /*qc2rust::param_end::match*/,  /*qc2rust::param_begin::body*/body /*qc2rust::param_end::body*/) /*qc2rust::macro_end::FOREACH_ENTITY_STRING*/
/*qc2rust::define::FOREACH_ENTITY_STRING_ORDERED*/
#define FOREACH_ENTITY_STRING_ORDERED(fld,match,body) /*qc2rust::macro_begin::FOREACH_ENTITY_STRING_ORDERED*/_FOREACH_ENTITY_FIND_ORDERED(string,  /*qc2rust::param_begin::fld*/fld /*qc2rust::param_end::fld*/,  /*qc2rust::param_begin::match*/match /*qc2rust::param_end::match*/, true,  /*qc2rust::param_begin::body*/body /*qc2rust::param_end::body*/) /*qc2rust::macro_end::FOREACH_ENTITY_STRING_ORDERED*/
.entity _FOREACH_ENTITY_FIND_string_next; noref string _FOREACH_ENTITY_FIND_string_mutex;
/*qc2rust::define::FOREACH_ENTITY_STRING_UNORDERED*/
#define FOREACH_ENTITY_STRING_UNORDERED(fld,match,body) /*qc2rust::macro_begin::FOREACH_ENTITY_STRING_UNORDERED*/_FOREACH_ENTITY_FIND_UNORDERED(, string,  /*qc2rust::param_begin::fld*/fld /*qc2rust::param_end::fld*/,  /*qc2rust::param_begin::match*/match /*qc2rust::param_end::match*/, true,  /*qc2rust::param_begin::body*/body /*qc2rust::param_end::body*/) /*qc2rust::macro_end::FOREACH_ENTITY_STRING_UNORDERED*/

/*qc2rust::define::FOREACH_ENTITY_CLASS*/
#define FOREACH_ENTITY_CLASS(class,cond,body) /*qc2rust::macro_begin::FOREACH_ENTITY_CLASS*/ORDERED(FOREACH_ENTITY_CLASS)( /*qc2rust::param_begin::class*/class /*qc2rust::param_end::class*/,  /*qc2rust::param_begin::cond*/cond /*qc2rust::param_end::cond*/,  /*qc2rust::param_begin::body*/body /*qc2rust::param_end::body*/) /*qc2rust::macro_end::FOREACH_ENTITY_CLASS*/
/*qc2rust::define::FOREACH_ENTITY_CLASS_ORDERED*/
#define FOREACH_ENTITY_CLASS_ORDERED(class,cond,body) /*qc2rust::macro_begin::FOREACH_ENTITY_CLASS_ORDERED*/_FOREACH_ENTITY_FIND_ORDERED(string, classname,  /*qc2rust::param_begin::class*/class /*qc2rust::param_end::class*/,  /*qc2rust::param_begin::cond*/cond /*qc2rust::param_end::cond*/,  /*qc2rust::param_begin::body*/body /*qc2rust::param_end::body*/) /*qc2rust::macro_end::FOREACH_ENTITY_CLASS_ORDERED*/
.entity _FOREACH_ENTITY_FIND_string_nextclazz; noref string _FOREACH_ENTITY_FIND_string_clazzmutex;
/*qc2rust::define::FOREACH_ENTITY_CLASS_UNORDERED*/
#define FOREACH_ENTITY_CLASS_UNORDERED(class,cond,body) /*qc2rust::macro_begin::FOREACH_ENTITY_CLASS_UNORDERED*/_FOREACH_ENTITY_FIND_UNORDERED(clazz, string, classname,  /*qc2rust::param_begin::class*/class /*qc2rust::param_end::class*/,  /*qc2rust::param_begin::cond*/cond /*qc2rust::param_end::cond*/,  /*qc2rust::param_begin::body*/body /*qc2rust::param_end::body*/) /*qc2rust::macro_end::FOREACH_ENTITY_CLASS_UNORDERED*/
