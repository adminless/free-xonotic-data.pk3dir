#pragma once

#include "oo.qh"

CLASS(Lazy, Object)
	ATTRIB(Lazy, m_get, entity());
	CONSTRUCTOR(Lazy, entity() _compute)
	{
		this.m_get = _compute;
	}
ENDCLASS(Lazy)

#define LAZY(id) __lazy_##id
/*qc2rust::define::LAZY_NEW*/
#define LAZY_NEW(id,compute) /*qc2rust::macro_begin::LAZY_NEW*/entity LAZY( /*qc2rust::param_begin::id*/id /*qc2rust::param_end::id*/)() { 		static bool done; 		static entity it; 		if (!done) { it =  /*qc2rust::param_begin::compute*/compute /*qc2rust::param_end::compute*/; done = true; } 		return it; 	} /*qc2rust::macro_end::LAZY_NEW*/
